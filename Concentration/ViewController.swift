//
//  ViewController.swift
//  Concentration
//
//  Created by Alexander K. White on 7/28/18.
//  Copyright Â© 2018 Alexander K. White. All rights reserved.
//

import UIKit

class ViewController: UIViewController {

    lazy var game = Concentration(numberOfPairOfCards: (cardButtons.count + 1) / 2)
    
    var flipCount = 0 {
        didSet{
            flipCountLabel.text = "Flips: \(flipCount)"
        }
    }
    
    //  TODO: Hook into storyboard
    
    @IBOutlet weak var flipCountLabel: UILabel!
    
    @IBOutlet var cardButtons: [UIButton]!
    
    @IBAction func touchCard(_ sender: UIButton){
        flipCount += 1
        if let cardNumber = cardButtons.index(of: sender){
            game.chooseCard(at: cardNumber)
            updateViewFromModel()
        } else {
            print("chosen card was not in cardButtons")
        }
    }
    
    @IBAction func touchNewGame(_ sender: UIButton){
        let rand_index = Int(arc4random_uniform(UInt32(themes.count)))
        emojiChoices = themes[rand_index]
        flipCount = 0
        game = Concentration(numberOfPairOfCards: (cardButtons.count + 1) / 2)
        updateViewFromModel()
    }
    
    func updateViewFromModel() {
        for index in cardButtons.indices {
            let button = cardButtons[index]
            let card = game.cards[index]
            if card.isFaceUp {
                button.setTitle(emoji(for: card), for: UIControlState.normal)
                button.backgroundColor = #colorLiteral(red: 1.0, green: 1.0, blue: 1.0, alpha: 1.0)
            } else {
                button.setTitle("", for: UIControlState.normal)
                button.backgroundColor = card.isMatched ? #colorLiteral(red: 1, green: 0.5763723254, blue: 0, alpha: 0) : #colorLiteral(red: 1, green: 0.5763723254, blue: 0, alpha: 1)
            }
            
        }
    }
    
    var asianFlagChoices = ["ðŸ‡¾ðŸ‡ª", "ðŸ‡»ðŸ‡³", "ðŸ‡¹ðŸ‡·", "ðŸ‡¹ðŸ‡­", "ðŸ‡¹ðŸ‡¯", "ðŸ‡¸ðŸ‡¾", "ðŸ‡¸ðŸ‡¬", "ðŸ‡µðŸ‡°"]
    var africanFlagChoices = ["ðŸ‡¨ðŸ‡²", "ðŸ‡¨ðŸ‡®", "ðŸ‡ªðŸ‡¹", "ðŸ‡¬ðŸ‡¶", "ðŸ‡±ðŸ‡¸", "ðŸ‡²ðŸ‡±", "ðŸ‡²ðŸ‡¼", "ðŸ‡¸ðŸ‡¿",
                              "ðŸ‡¹ðŸ‡¬", "ðŸ‡¿ðŸ‡²", "ðŸ‡¿ðŸ‡¼", "ðŸ‡¿ðŸ‡¦"]
    var southAmericanFlagChoices = ["ðŸ‡µðŸ‡ª", "ðŸ‡µðŸ‡¾", "ðŸ‡§ðŸ‡·", "ðŸ‡ºðŸ‡¾", "ðŸ‡¦ðŸ‡·", "ðŸ‡¨ðŸ‡±", "ðŸ‡¨ðŸ‡´", "ðŸ‡»ðŸ‡ª", "ðŸ‡¬ðŸ‡¾", "ðŸ‡¸ðŸ‡·"]
    var europeanFlagChoices = ["ðŸ‡«ðŸ‡·", "ðŸ‡¬ðŸ‡§", "ðŸ‡¬ðŸ‡·", "ðŸ‡­ðŸ‡·", "ðŸ‡®ðŸ‡ª", "ðŸ‡±ðŸ‡¹", "ðŸ‡²ðŸ‡¨", "ðŸ‡²ðŸ‡¹", "ðŸ‡³ðŸ‡±", "ðŸ‡·ðŸ‡´", "ðŸ‡¸ðŸ‡°", "ðŸ‡¸ðŸ‡ª"]
    var northAmericanFlagChoices = ["ðŸ‡¨ðŸ‡·", "ðŸ‡ºðŸ‡¸", "ðŸ‡²ðŸ‡½", "ðŸ‡¨ðŸ‡¦", "ðŸ‡­ðŸ‡³", "ðŸ‡¬ðŸ‡¹", "ðŸ‡µðŸ‡¦", "ðŸ‡³ðŸ‡®", "ðŸ‡¸ðŸ‡»"]
    var caribbeanFlagChoices = ["ðŸ‡¸ðŸ‡½", "ðŸ‡§ðŸ‡¶", "ðŸ‡§ðŸ‡¸", "ðŸ‡¯ðŸ‡²", "ðŸ‡©ðŸ‡´", "ðŸ‡©ðŸ‡²", "ðŸ‡¨ðŸ‡º", "ðŸ‡¨ðŸ‡¼", "ðŸ‡­ðŸ‡¹", "ðŸ‡¹ðŸ‡¹", "ðŸ‡§ðŸ‡§", "ðŸ‡¦ðŸ‡¼"]
    lazy var themes = [africanFlagChoices, asianFlagChoices, southAmericanFlagChoices, europeanFlagChoices, northAmericanFlagChoices, caribbeanFlagChoices]
    
    lazy var emojiChoices = themes[Int(arc4random_uniform(UInt32(themes.count)))]
    var emoji = [Int: String]()
    
    func emoji(for card: Card) -> String {
        if emoji[card.identifier] == nil, emojiChoices.count > 0 {
            let randomIndex = Int(arc4random_uniform(UInt32(emojiChoices.count - 1)))
            emoji[card.identifier] = emojiChoices.remove(at: randomIndex)
        }
        return emoji[card.identifier] ?? "?"
    }

}

